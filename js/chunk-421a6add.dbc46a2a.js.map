{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.starts-with.js","webpack:///./node_modules/core-js/modules/es.array.filter.js","webpack:///./src/views/Times.vue?ae5e","webpack:///./node_modules/core-js/modules/es.array.flat-map.js","webpack:///./node_modules/core-js/modules/es.array.unscopables.flat-map.js","webpack:///./node_modules/core-js/modules/es.array.find.js","webpack:///./src/views/Times.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack:///./src/views/TimeAddAndEditModal.vue","webpack:///./src/views/TimeAddAndEditModal.vue?26ed","webpack:///./src/views/TimeAddAndEditModal.vue?dd12","webpack:///./src/views/Times.vue?a3b5","webpack:///./src/views/Times.vue?17f7","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/core-js/internals/flatten-into-array.js","webpack:///./node_modules/core-js/modules/es.array.find-index.js"],"names":["$","getOwnPropertyDescriptor","f","toLength","notARegExp","requireObjectCoercible","correctIsRegExpLogic","IS_PURE","$startsWith","startsWith","min","Math","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","String","prototype","writable","target","proto","forced","searchString","that","this","index","arguments","length","undefined","search","call","slice","$filter","filter","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","callbackfn","flattenIntoArray","toObject","aFunction","arraySpeciesCreate","flatMap","A","O","sourceLen","addToUnscopables","$find","find","FIND","SKIPS_HOLES","Array","class","id","translucent","slot","color","size","$t","completeOvertime","formatDuration","current","worktime","switchOvertimeColor","overtime","fullscreen","ref","months","month","key","name","toLowerCase","year","sticky","days","day","formatDateForId","date","openAddEditModal","switchLabelColor","weekday","getDayEntry","isWork","type","formatTime","start","end","toString","side","entry","ion-item-option","expandable","deleteEntryForDay","loadData","$event","threshold","loading-spinner","loading-text","vertical","horizontal","presentQuickActionsSheet","ios","addOutline","md","add","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","args","apply","err","dismiss","title","save","EntryType","WORK","OVERTIME","VACATION","ILL","display-format","picker-format","changeEntryStart","changeEntryEnd","fullDay","getOvertimeForPicker","changeOvertime","updateOvertimeForFullDay","overtimeMode","OvertimeMode","ADD","REMOVE","isSameDate","first","second","toLocaleTimeString","navigator","language","entryEndChangedOrLoaded","components","IonContent","IonHeader","IonTitle","IonToolbar","IonButton","IonButtons","IonItem","IonList","IonLabel","IonDatetime","IonSelect","IonSelectOption","IonToggle","IonSegment","IonSegmentButton","props","Object","default","Function","saveDayEntry","data","created","getEntry","hours","methods","getStartDateTime","dayDate","Date","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","setMilliseconds","getMilliseconds","getEndDateTime","pausetime","calculatePerfectEnd","JSON","parse","stringify","minutes","calculatedEntry","calculateEntry","saveEntryForDate","event","detail","proxyDateForOvertime","entryOvertime","computed","toLocaleDateString","render","daysInMonth","getDate","createItemSelectorTextForDate","interval","monthModifier","IonMenuButton","IonPage","IonGrid","IonRow","IonCol","IonItemGroup","IonItemDivider","IonText","IonInfiniteScroll","IonInfiniteScrollContent","IonItemOptions","IonItemOption","IonItemSliding","IonFab","IonFabButton","IonIcon","newestDate","loadNewestDate","loadMonthsInFutureUntil","loadNextMonth","loadStatistics","setInterval","mounted","scrollToDate","element","$el","querySelector","window","scrollTo","offsetTop","loadCompleteOvertime","calculateOvertimeComplete","isToday","loadTodayEntry","isWorkStartActive","loadActiveWorkEntry","loadEntryForDate","hour","minute","duration","entryType","setTimeout","test","complete","getDayForDate","onlyWeekDayOptions","onlyDayOptions","newDay","dayEntry","loadMonth","baseDate","setDate","setMonth","onlyMonthNameOptions","newMonth","monthNumber","getFullYear","latestDay","push","foundMonthIndex","findIndex","searchMonth","unshift","getMonth","deleteEntryForDate","$refs","entryList","closeSlidingItems","findDayForDate","foundMonth","toDateString","updateTimeRange","foundDay","loadedEntry","create","component","TimeAddAndEditModal","componentProps","addEditModal","dayToSaveEntryTo","present","newestMonth","monthToLoad","getWorktimeForDate","dateEntry","getOvertimeForDate","today","todayDayElement","header","buttons","text","icon","handler","stopWork","saveWorkStart","role","quickActionsSheet","__scopeId","runtime","exports","Op","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","defineProperty","enumerable","configurable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","makeInvokeMethod","tryCatch","GenStateSuspendedStart","GenStateSuspendedYield","GenStateExecuting","GenStateCompleted","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","AsyncIterator","PromiseImpl","invoke","record","result","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","locs","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","stop","rootEntry","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","isArray","bind","original","source","depth","mapper","thisArg","targetIndex","sourceIndex","mapFn","$findIndex","FIND_INDEX"],"mappings":"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","file":"js/chunk-421a6add.dbc46a2a.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\n// eslint-disable-next-line es/no-string-prototype-startswith -- safe\nvar $startsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.es/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return $startsWith\n      ? $startsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $filter = require('../internals/array-iteration').filter;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader-v16/dist/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader-v16/dist/index.js??ref--0-1!./Times.vue?vue&type=style&index=0&id=52da0c2e&scoped=true&lang=css\"","'use strict';\nvar $ = require('../internals/export');\nvar flattenIntoArray = require('../internals/flatten-into-array');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar aFunction = require('../internals/a-function');\nvar arraySpeciesCreate = require('../internals/array-species-create');\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject(this);\n    var sourceLen = toLength(O.length);\n    var A;\n    aFunction(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n","// this method was added to unscopables after implementation\n// in popular engines, so it's moved to a separate module\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables('flatMap');\n","'use strict';\nvar $ = require('../internals/export');\nvar $find = require('../internals/array-iteration').find;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND = 'find';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND);\n","<template>\n  <ion-page>\n    <ion-header :translucent=\"true\">\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-menu-button color=\"primary\"></ion-menu-button>\n        </ion-buttons>\n        <ion-grid>\n          <ion-row>\n            <ion-col\n              id=\"complete-overtime\"\n              class=\"ion-align-self-center\"\n              size=\"6\"\n            >\n              <span class=\"bold\">{{ $t(\"times.overtimeLabel\") }}:</span> {{ completeOvertime }}\n            </ion-col>\n            <ion-col class=\"ion-align-self-center\" size=\"3\">\n              <span class=\"bold\">{{ $t(\"times.todayLabel\") }}:</span>\n            </ion-col>\n            <ion-col id=\"today-stats\" class=\"ion-align-self-center\" size=\"3\">\n              {{ formatDuration(current.worktime) }}<br />\n              <ion-text\n                id=\"today-overtime\"\n                :color=\"switchOvertimeColor(current.overtime)\"\n                >{{ formatDuration(current.overtime) }}</ion-text\n              >\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content :fullscreen=\"true\">\n      <ion-list id=\"times-list\" ref=\"entryList\">\n        <ion-item-group v-bind:key=\"month.name\" v-for=\"month in months\">\n          <ion-item-divider\n            :id=\"'times-divider-'+month.name.toLowerCase()+'-'+month.year\"\n            color=\"primary\"\n            sticky\n            >{{ month.name }} {{ month.year }}</ion-item-divider\n          >\n          <ion-item-sliding v-for=\"day in month.days\" v-bind:key=\"day.day\">\n            <ion-item\n              :id=\"formatDateForId(day.date)\"\n              @click=\"openAddEditModal(day)\"\n            >\n              <ion-grid>\n                <ion-row>\n                  <ion-col size=\"4\">\n                    <ion-label :color=\"switchLabelColor(day)\">\n                      <div id=\"times-item-day-weekday\">{{ day.weekday }}.</div>\n                      <div id=\"times-item-day-day\" class=\"bigger\">\n                        {{ day.day }}\n                      </div>\n                    </ion-label>\n                  </ion-col>\n\n                  <ion-col size=\"4\" v-if=\"getDayEntry(day)\">\n                    <ion-text\n                      id=\"times-item-start-end-time\"\n                      v-if=\"isWork(getDayEntry(day).type)\"\n                    >\n                      {{ formatTime(getDayEntry(day).start) }} -\n                      {{ formatTime(getDayEntry(day).end) }}\n                    </ion-text>\n                  </ion-col>\n\n                  <ion-col\n                    id=\"times-item-stats\"\n                    size=\"4\"\n                    class=\"ion-text-end\"\n                    v-if=\"getDayEntry(day)\"\n                  >\n                    {{ formatDuration(getDayEntry(day).worktime) }}<br />\n                    <ion-text\n                      id=\"times-item-overtime\"\n                      :color=\"switchOvertimeColor(getDayEntry(day).overtime)\"\n                      >{{ getDayEntry(day).overtime.toString() }}</ion-text\n                    >\n                  </ion-col>\n                </ion-row>\n              </ion-grid>\n            </ion-item>\n            <ion-item-options side=\"end\">\n              <ion-item-option\n                id=\"times-item-delete-button\"\n                v-if=\"day.entry\"\n                ion-item-option\n                color=\"danger\"\n                expandable\n                @click=\"deleteEntryForDay(day)\"\n                >{{ $t(\"times.deleteButton\") }}</ion-item-option\n              >\n            </ion-item-options>\n          </ion-item-sliding>\n        </ion-item-group>\n      </ion-list>\n\n      <ion-infinite-scroll\n        @ionInfinite=\"loadData($event)\"\n        threshold=\"100px\"\n        id=\"infinite-scroll\"\n      >\n        <ion-infinite-scroll-content\n          loading-spinner=\"bubbles\"\n          v-bind:loading-text=\"$t('times.loadingData')\"\n        >\n        </ion-infinite-scroll-content>\n      </ion-infinite-scroll>\n    </ion-content>\n\n    <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n      <ion-fab-button\n        id=\"times-quick-add-button\"\n        @click=\"presentQuickActionsSheet()\"\n      >\n        <ion-icon :ios=\"addOutline\" :md=\"add\"></ion-icon>\n      </ion-fab-button>\n    </ion-fab>\n  </ion-page>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonButtons,\n  IonHeader,\n  IonMenuButton,\n  IonPage,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonContent,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonItemGroup,\n  IonItemDivider,\n  IonText,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonItemOptions,\n  IonItemOption,\n  IonItemSliding,\n  IonFab,\n  IonFabButton,\n  IonIcon,\n  modalController,\n  actionSheetController,\n} from \"@ionic/vue\";\nimport { Month, Day, Entry, EntryType, Duration } from \"../types\";\nimport TimeService from \"@/servies/times.service\";\nimport { defineComponent } from \"vue\";\nimport TimeAddAndEditModalVue from \"./TimeAddAndEditModal.vue\";\nimport { add, addOutline, close } from \"ionicons/icons\";\n\nfunction daysInMonth(month: number, year: number): number {\n  return new Date(year, month+1, 0).getDate();\n}\n\nfunction createItemSelectorTextForDate(date: Date): string {\n  const day = date.toLocaleDateString(navigator.language, {\n    day: \"2-digit\"\n  }).toLowerCase();\n  const month = date.toLocaleDateString(navigator.language, {\n    month: \"long\"\n  }).toLowerCase();\n  const year = date.toLocaleDateString(navigator.language, {\n    year: \"numeric\"\n  }).toLowerCase();\n\n  return day+\"-\"+month+\"-\"+year;\n}\n\nfunction isSameDate(first: Date, second: Date) {\n  return (\n    first.toLocaleDateString(navigator.language, {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    }) ===\n    second.toLocaleDateString(navigator.language, {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    })\n  );\n}\n\n\n\nexport default defineComponent({\n  interval: 1000,\n  months: [],\n  monthModifier: 0,\n  components: {\n    IonButtons,\n    IonHeader,\n    IonMenuButton,\n    IonPage,\n    IonToolbar,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonContent,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonItemGroup,\n    IonItemDivider,\n    IonText,\n    IonInfiniteScroll,\n    IonInfiniteScrollContent,\n    IonItemOptions,\n    IonItemOption,\n    IonItemSliding,\n    IonFab,\n    IonFabButton,\n    IonIcon,\n  },\n  data() {\n    return {\n      months: [] as Month[],\n      current: {} as Entry,\n      completeOvertime: \"\",\n      interval: 1000,\n      monthModifier: 0,\n      add,\n      addOutline,\n    };\n  },\n  created() {\n    const newestDate: Date | null = TimeService.loadNewestDate();\n    if(newestDate != null && newestDate > new Date())\n    {\n      this.loadMonthsInFutureUntil(newestDate);\n      this.monthModifier = 1;\n    }\n    this.loadNextMonth();\n    this.loadNextMonth();\n    this.loadStatistics();\n    this.interval = setInterval(this.loadStatistics, 1000);\n  },\n  mounted() {\n    this.scrollToDate(new Date());\n  },\n  methods: {\n    formatDateForId(date: Date) {\n      const day = date.toLocaleDateString(navigator.language, {\n        day: \"2-digit\"\n      }).toLowerCase();\n      const month = date.toLocaleDateString(navigator.language, {\n        month: \"long\"\n      }).toLowerCase();\n      const year = date.toLocaleDateString(navigator.language, {\n        year: \"numeric\"\n      }).toLowerCase();\n\n      return \"times-item-\"+day+\"-\"+month+\"-\"+year;\n    },\n    scrollToDate(date: Date) {\n      const element = this.$el.querySelector('#'+this.formatDateForId(date));\n      if(element)\n      {\n        //element.scrollIntoView({alignToTop:true, behavior: 'smooth'});\n        window.scrollTo(0, element.offsetTop+20);\n      }\n    },\n    loadCompleteOvertime() {\n      this.completeOvertime = this.formatDuration(\n        TimeService.calculateOvertimeComplete()\n      );\n    },\n    isToday(day: Day): boolean {\n      return isSameDate(day.date, new Date());\n    },\n    getDayEntry(day: Day): Entry | undefined {\n      if (day.entry) {\n        if (isSameDate(day.entry.start, this.current.start)) {\n          return this.current;\n        }\n        return day.entry;\n      }\n      return;\n    },\n    loadStatistics() {\n      this.loadTodayEntry();\n      this.loadCompleteOvertime();\n    },\n    loadTodayEntry() {\n      let current: Entry | null = null;\n      if(TimeService.isWorkStartActive())\n      {\n        current = TimeService.loadActiveWorkEntry();\n      }\n\n      if(current === null)\n      {\n        current = TimeService.loadEntryForDate(new Date());\n      }\n\n      if (current === null) {\n        this.current = {\n          start: new Date(),\n          fullDay: false,\n          type: EntryType.WORK,\n          overtime: new Duration(0, 0),\n          worktime: new Duration(0, 0),\n        };\n      } else {\n        this.current = TimeService.calculateEntry(current);\n      }\n    },\n    switchLabelColor(day: Day) {\n      return day.entry\n        ? day.entry.type === EntryType.OVERTIME\n          ? \"warning\"\n          : day.entry.type === EntryType.VACATION\n          ? \"secondary\"\n          : day.entry.type === EntryType.ILL\n          ? \"tertiary\"\n          : \"primary\"\n        : \"medium\";\n    },\n    switchOvertimeColor(overtime: Duration | undefined) {\n      if (!overtime) {\n        return \"success\";\n      }\n      return overtime.toString().startsWith(\"-\") ? \"danger\" : \"success\";\n    },\n    formatTime(date: Date | undefined) {\n      return (date ? date : new Date()).toLocaleTimeString(navigator.language, {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n    },\n    formatDuration(duration: Duration | undefined): string {\n      if (duration) {\n        return duration.toString();\n      }\n      return \"0:00\";\n    },\n    isWork(entryType: EntryType) {\n      return entryType === EntryType.WORK;\n    },\n    loadData(event: CustomEvent) {\n      setTimeout(() => {\n        this.loadNextMonth();\n        if (event.target) {\n          const test: typeof IonInfiniteScroll = (event.target as unknown) as typeof IonInfiniteScroll;\n          test.complete();\n        }\n      }, 500);\n    },\n    getDayForDate(date: Date): Day {\n      const onlyWeekDayOptions: Intl.DateTimeFormatOptions = {\n        weekday: \"short\",\n      };\n      const onlyDayOptions: Intl.DateTimeFormatOptions = { day: \"numeric\" };\n      const newDay: Day = {\n        weekday: date.toLocaleDateString(\n          navigator.language,\n          onlyWeekDayOptions\n        ),\n        day: date.toLocaleDateString(navigator.language, onlyDayOptions),\n        date: date,\n      };\n      const dayEntry = TimeService.loadEntryForDate(date);\n\n      if (dayEntry != null) {\n        newDay.entry = dayEntry;\n      }\n      return newDay;\n    },\n    async loadMonth(month: number, year: number, date?: number) {\n      const baseDate = new Date();\n      baseDate.setDate(1);\n      baseDate.setMonth(month);\n\n      const onlyMonthNameOptions: Intl.DateTimeFormatOptions = {\n        month: \"long\",\n      };\n      const newMonth: Month = {\n        name: new Date(year, month).toLocaleDateString(\n          navigator.language,\n          onlyMonthNameOptions\n        ),\n        monthNumber: month,\n        year: baseDate.getFullYear(),\n        days: [],\n      };\n\n      let latestDay: number;\n      if(date)\n      {\n        latestDay = date;\n      } else if(this.months.length === 0) {\n        latestDay = new Date().getDate();\n      } else {\n        latestDay = daysInMonth(month, year)\n      }\n\n      for (let day = latestDay; day > 0; day--) {\n        const date = new Date(year, month, day);\n        const newDay: Day = this.getDayForDate(date);\n\n        newMonth.days.push(newDay);\n      }\n      \n      const foundMonthIndex = this.months.findIndex(searchMonth => searchMonth.year == year && searchMonth.monthNumber == month);\n\n      if(foundMonthIndex >= 0)\n      {\n        this.months[foundMonthIndex] = newMonth;\n      } else if(this.months[0] && (year > this.months[0].year || month > this.months[0].monthNumber))\n      {\n        this.months.unshift(newMonth);\n      } else {\n        this.months.push(newMonth);\n      }\n    },\n    async loadNextMonth() {\n      this.loadMonth((new Date().getMonth() - this.monthModifier), new Date().getFullYear());\n      this.monthModifier++;\n    },\n    async deleteEntryForDay(day: Day) {\n      if (day.entry) {\n        TimeService.deleteEntryForDate(day.entry.start);\n        day.entry = undefined;\n      }\n\n      (this.$refs.entryList as typeof IonList).$el.closeSlidingItems();\n    },\n    findDayForDate(date: Date): Day | undefined\n    {\n      const foundMonth = this.months.find(month => month.monthNumber === date.getMonth());\n      if(foundMonth)\n      {\n        return foundMonth.days.find(day => day.date.toDateString() == date.toDateString());       \n      }\n    },\n    updateTimeRange(start: Date, end: Date)\n    {\n      for (let date = new Date(start); date <= end; date.setDate(date.getDate() + 1)) {\n        const foundDay = this.findDayForDate(date);\n        const loadedEntry = TimeService.loadEntryForDate(date);\n        if(foundDay && loadedEntry != null)\n        {\n          foundDay.entry = loadedEntry;\n        }\n      }\n    },\n    async openAddEditModal(day: Day) {\n      const addEditModal = await modalController.create({\n        id: \"times-new-entry-\"+createItemSelectorTextForDate(day.date),\n        component: TimeAddAndEditModalVue,\n        componentProps: {\n          day: day,\n          dismiss: () => {\n            addEditModal.dismiss();\n          },\n          saveDayEntry: (entry: Entry) => {\n            let dayToSaveEntryTo: Day = day;\n            if(!isSameDate(entry.start, day.date))\n            {\n              const foundDay = this.findDayForDate(entry.start);\n              if(foundDay)\n              {\n                dayToSaveEntryTo = foundDay;\n              }\n            }\n\n            if(entry.start > new Date())\n            {\n              this.loadMonthsInFutureUntil(entry.start);\n            }\n\n            /*if (dayToSaveEntryTo.entry) {\n              dayToSaveEntryTo.entry.overtime = entry.overtime;\n            }*/\n            dayToSaveEntryTo.entry = entry;\n\n            if(entry.end && entry.start.toDateString() !== entry.end.toDateString())\n            {\n\n              this.updateTimeRange(entry.start, entry.end);\n            }\n\n            this.loadStatistics();\n          },\n        },\n      });\n      return addEditModal.present();\n    },\n    loadMonthsInFutureUntil(date: Date){\n      const newestMonth = new Date();\n      newestMonth.setHours(0, 0, 0, 0);\n      newestMonth.setDate(1);\n\n      for(const monthToLoad: Date = newestMonth; monthToLoad < date; monthToLoad.setMonth(monthToLoad.getMonth()+1))\n      {\n        if(monthToLoad.getFullYear() == date.getFullYear() && monthToLoad.getMonth() == date.getMonth())\n        {\n          this.loadMonth(monthToLoad.getMonth(), monthToLoad.getFullYear(), date.getDate());  \n        } else {\n          this.loadMonth(monthToLoad.getMonth(), monthToLoad.getFullYear());\n        }\n      }\n    },\n    getWorktimeForDate(date: Date) {\n      const dateEntry: Entry | undefined = this.getDayEntry(\n        this.getDayForDate(date)\n      );\n      if (dateEntry) {\n        return dateEntry.worktime;\n      }\n      return undefined;\n    },\n    getOvertimeForDate(date: Date) {\n      const dateEntry: Entry | undefined = this.getDayEntry(\n        this.getDayForDate(date)\n      );\n      if (dateEntry) {\n        return dateEntry.overtime;\n      }\n      return undefined;\n    },\n    async presentQuickActionsSheet() {\n      const today = new Date();\n      let todayDayElement: Day | undefined = this.months\n        .filter(\n          (month) =>\n            month.year == today.getFullYear() &&\n            month.monthNumber == today.getMonth()\n        )\n        .flatMap((month) => month.days)\n        .find((day) => isSameDate(day.date, today));\n\n      if (!todayDayElement) {\n        todayDayElement = this.getDayForDate(today);\n      }\n\n      const quickActionsSheet = await actionSheetController.create({\n        header: this.$t(\"times.quickActions.header\"),\n        buttons: [\n          {\n            text: TimeService.isWorkStartActive() ? this.$t(\"times.quickActions.stopWork\") : this.$t(\"times.quickActions.startWork\"),\n            icon: add,\n            handler: () => {\n              if(TimeService.isWorkStartActive())\n              {\n                TimeService.stopWork();\n              } else {\n                if (todayDayElement) {\n                  todayDayElement.entry = {\n                    start: new Date(),\n                    fullDay: false,\n                    type: EntryType.WORK,\n                  };\n\n                  TimeService.saveEntryForDate(new Date(), todayDayElement.entry);\n                  TimeService.saveWorkStart(todayDayElement.entry);\n                  this.loadStatistics();\n                }\n              }\n            },\n          },\n          {\n            text: this.$t(\"times.quickActions.newEntry\"),\n            icon: add,\n            handler: () => {\n              if (todayDayElement) {\n                this.openAddEditModal(todayDayElement);\n              }\n            },\n          },\n          {\n            text: this.$t(\"cancel\"),\n            icon: close,\n            role: \"cancel\",\n          },\n        ],\n      });\n      await quickActionsSheet.present();\n    },\n  },\n});\n</script>\n\n<style scoped>\n.bold {\n  font-weight: bold;\n}\n.bigger {\n  font-size: 1.25em;\n}\n</style>","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","<template>\n  <ion-header>\n    <ion-toolbar>\n      <ion-buttons slot=\"start\">\n        <ion-button id=\"times-new-entry-abort\" @click=\"dismiss()\">{{ $t(\"abort\") }}</ion-button>\n      </ion-buttons>\n\n      <ion-title>{{ title }}</ion-title>\n\n      <ion-buttons slot=\"end\">\n        <ion-button id=\"times-new-entry-save\" @click=\"save()\">{{ $t(\"save\") }}</ion-button>\n      </ion-buttons>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content class=\"ion-padding\">\n    <ion-list>\n      <ion-item>\n        <ion-label>{{ $t(\"times.modal.type\") }}</ion-label>\n        <ion-select id=\"times-new-entry-type-select\" v-model=\"entry.type\">\n          <ion-select-option id=\"times-new-entry-type-select-option-work\" :value=\"EntryType.WORK\">{{ $t(\"times.modal.types.work\") }}</ion-select-option>\n          <ion-select-option  id=\"times-new-entry-type-select-option-overtime\" :value=\"EntryType.OVERTIME\"\n            >{{ $t(\"times.modal.types.overtime\") }}</ion-select-option\n          >\n          <ion-select-option id=\"times-new-entry-type-select-option-vacation\" :value=\"EntryType.VACATION\"\n            >{{ $t(\"times.modal.types.vacation\") }}</ion-select-option\n          >\n          <ion-select-option id=\"times-new-entry-type-select-option-illness\" :value=\"EntryType.ILL\">{{ $t(\"times.modal.types.illness\") }}</ion-select-option>\n        </ion-select>\n      </ion-item>\n\n      <!-- Work -->\n      <ion-item v-if=\"entry.type === EntryType.WORK\">\n        <ion-label>{{ $t(\"times.modal.startTime\") }}</ion-label>\n        <ion-datetime\n          id=\"times-new-entry-work-start\"\n          display-format=\"DD.MM.YYYY HH:mm\"\n          picker-format=\"DD.MM.YYYY HH:mm\"\n          :value=\"entry.start.toString()\"\n          @ionChange=\"changeEntryStart\"\n        ></ion-datetime>\n      </ion-item>\n      <ion-item v-if=\"entry.type === EntryType.WORK\">\n        <ion-label>{{ $t(\"times.modal.endTime\") }}</ion-label>\n        <ion-datetime\n          id=\"times-new-entry-work-end\"\n          display-format=\"DD.MM.YYYY HH:mm\"\n          picker-format=\"DD.MM.YYYY HH:mm\"\n          :value=\"entry.end.toString()\"\n          @ionChange=\"changeEntryEnd\"\n        ></ion-datetime>\n      </ion-item>\n\n      <!-- Overtime -->\n      <ion-item v-if=\"entry.type === EntryType.OVERTIME\">\n        <ion-label>{{ $t(\"times.modal.day\") }}</ion-label>\n        <ion-datetime\n          id=\"times-new-entry-overtime-day\"\n          display-format=\"DD.MM.YYYY\"\n          picker-format=\"DD.MM.YYYY\"\n          :value=\"entry.start.toString()\"\n          @ionChange=\"changeEntryStart\"\n        ></ion-datetime>\n      </ion-item>\n      <ion-item v-if=\"entry.type === EntryType.OVERTIME && !entry.fullDay\">\n        <ion-label>{{ $t(\"times.modal.overtimeAmount\") }}</ion-label>\n\n        <ion-datetime\n          id=\"times-new-entry-overtime-amount\"\n          display-format=\"HH:mm\"\n          picker-format=\"HH:mm\"\n          :value=\"getOvertimeForPicker()\"\n          @ionChange=\"changeOvertime\"\n        ></ion-datetime>\n      </ion-item>\n      <ion-item v-if=\"entry.type === EntryType.OVERTIME\">\n        <ion-label>{{ $t(\"times.modal.fullDay\") }}</ion-label>\n        <ion-toggle\n          v-model=\"entry.fullDay\"\n          @ionChange=\"updateOvertimeForFullDay\"\n        />\n      </ion-item>\n      <ion-item v-if=\"entry.type === EntryType.OVERTIME\">\n        <ion-segment v-model=\"overtimeMode\">\n          <ion-segment-button :value=\"OvertimeMode.ADD\">\n            <ion-label>{{ $t(\"times.modal.add\") }}</ion-label>\n          </ion-segment-button>\n          <ion-segment-button :value=\"OvertimeMode.REMOVE\">\n            <ion-label>{{ $t(\"times.modal.remove\") }}</ion-label>\n          </ion-segment-button>\n        </ion-segment>\n      </ion-item>\n\n      <!-- Vacation and Ill -->\n      <ion-item\n        v-if=\"entry.type === EntryType.VACATION || entry.type === EntryType.ILL\"\n      >\n        <ion-label>{{ $t(\"times.modal.startTime\") }}</ion-label>\n        <ion-datetime\n          display-format=\"DD.MM.YYYY\"\n          picker-format=\"DD.MM.YYYY\"\n          :value=\"entry.start.toString()\"\n          @ionChange=\"changeEntryStart\"\n        ></ion-datetime>\n      </ion-item>\n      <ion-item\n        v-if=\"entry.type === EntryType.VACATION || entry.type === EntryType.ILL\"\n      >\n        <ion-label>{{ $t(\"times.modal.endTime\") }}</ion-label>\n        <ion-datetime\n          display-format=\"DD.MM.YYYY\"\n          picker-format=\"DD.MM.YYYY\"\n          :value=\"entry.end.toString()\"\n          @ionChange=\"changeEntryEnd\"\n        ></ion-datetime>\n      </ion-item>\n    </ion-list>\n  </ion-content>\n</template>\n\n<script lang=\"ts\">\nimport {\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonButton,\n  IonButtons,\n  IonItem,\n  IonList,\n  IonLabel,\n  IonDatetime,\n  IonSelect,\n  IonSelectOption,\n  IonToggle,\n  IonSegment,\n  IonSegmentButton,\n} from \"@ionic/vue\";\nimport { Day, Duration, Entry, EntryType, OvertimeMode } from \"../types\";\nimport { defineComponent, PropType } from \"vue\";\nimport TimeService from \"@/servies/times.service\";\n\nfunction isSameDate(first: Date, second: Date) {\n  return (\n    first.toLocaleTimeString(navigator.language, {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    }) ===\n    second.toLocaleTimeString(navigator.language, {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    })\n  );\n}\n\nexport default defineComponent({\n  name: \"TimeAddAndEditModal\",\n  entryEndChangedOrLoaded: false,\n  overtimeMode: OvertimeMode.ADD,\n  components: {\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonButtons,\n    IonItem,\n    IonList,\n    IonLabel,\n    IonDatetime,\n    IonSelect,\n    IonSelectOption,\n    IonToggle,\n    IonSegment,\n    IonSegmentButton,\n  },\n  props: {\n    day: { type: Object as PropType<Day>, default: undefined },\n    dismiss: { type: Function },\n    saveDayEntry: { type: Function },\n  },\n  data() {\n    return {\n      entry: (undefined as unknown) as Entry,\n      overtimeMode: OvertimeMode.ADD,\n      entryEndChangedOrLoaded: false,\n      EntryType,\n      OvertimeMode,\n    };\n  },\n  created() {\n    this.entry = this.getEntry();\n    this.overtimeMode =\n      this.entry.overtime && this.entry.overtime.hours > 0\n        ? OvertimeMode.ADD\n        : OvertimeMode.REMOVE;\n  },\n  methods: {\n    getStartDateTime(day: Day): Date {\n      if (day.entry) {\n        return day.entry.start;\n      }\n\n      const dayDate = new Date(day.date);\n      const current = new Date();\n\n      dayDate.setHours(current.getHours());\n      dayDate.setMinutes(current.getMinutes());\n      dayDate.setSeconds(current.getSeconds());\n      dayDate.setMilliseconds(current.getMilliseconds());\n\n      return dayDate;\n    },\n    getEndDateTime(day: Day, pausetime?: Duration | undefined): Date {\n      if (day.entry && day.entry.end) {\n        return day.entry.end;\n      }\n\n      return TimeService.calculatePerfectEnd(\n        this.getStartDateTime(day),\n        pausetime\n      );\n    },\n    getEntry(): Entry {\n      if (this.day.entry) {\n        //Deep clone to avoid changing dates when not saving\n        const entry: Entry = JSON.parse(JSON.stringify(this.day.entry));\n        entry.start = new Date(entry.start);\n        if (entry.end) {\n          this.entryEndChangedOrLoaded = true;\n          entry.end = new Date(entry.end);\n        } else {\n          entry.end = this.getEndDateTime(this.day, entry.pausetime);\n        }\n\n        if (entry.worktime) {\n          entry.worktime = new Duration(\n            entry.worktime.hours,\n            entry.worktime.minutes\n          );\n        }\n        if (entry.overtime) {\n          entry.overtime = new Duration(\n            entry.overtime.hours,\n            entry.overtime.minutes\n          );\n        }\n\n        return entry;\n      }\n      return {\n        start: this.getStartDateTime(this.day),\n        fullDay: false,\n        type: EntryType.WORK,\n        end: this.getEndDateTime(this.day),\n      };\n    },\n    save() {\n      const calculatedEntry = TimeService.calculateEntry(this.entry);\n\n      if (this.entry.type == EntryType.OVERTIME &&\n        (\n          (this.overtimeMode == OvertimeMode.REMOVE &&\n            calculatedEntry.overtime &&\n            calculatedEntry.overtime.hours > 0) ||\n          (this.overtimeMode == OvertimeMode.ADD &&\n            calculatedEntry.overtime &&\n            calculatedEntry.overtime.hours < 0)\n        )\n      ) {\n        //Change sign if it don't matches to the mode\n        calculatedEntry.overtime.hours = calculatedEntry.overtime.hours * -1;\n      }\n\n      //Set worktime to 0 for overtime and vacation\n      if (\n        this.entry.type == EntryType.OVERTIME ||\n        this.entry.type == EntryType.VACATION\n      ) {\n        calculatedEntry.worktime = new Duration(0, 0);\n      }\n\n      //Set overtime for vacation to 0\n      if (this.entry.type == EntryType.VACATION) {\n        calculatedEntry.overtime = new Duration(0, 0);\n      }\n\n      //If not type work set start and end time to 0:00\n      if(this.entry.type != EntryType.WORK)\n      {\n        calculatedEntry.start.setHours(0,0,0,0);\n\n        if(calculatedEntry.end)\n        {\n          calculatedEntry.end.setHours(0,0,0,0);\n        }\n      }\n\n      //Save to local storage\n      TimeService.saveEntryForDate(calculatedEntry.start, calculatedEntry);\n\n      //Update entry in list\n      if (this.saveDayEntry) {\n        this.saveDayEntry(calculatedEntry);\n      }\n      if (this.dismiss) {\n        this.dismiss();\n      }\n    },\n    changeEntryStart(event: CustomEvent) {\n      this.entry.start = new Date(event.detail.value);\n      if(!this.entryEndChangedOrLoaded)\n      {\n        this.entry.end = TimeService.calculatePerfectEnd(\n          this.entry.start,\n          this.entry.pausetime\n        );\n        this.entryEndChangedOrLoaded = false;\n      }\n    },\n    changeEntryEnd(event: CustomEvent) {\n      this.entryEndChangedOrLoaded = true;\n      this.entry.end = new Date(event.detail.value);\n    },\n    getOvertimeForPicker() {\n      const proxyDateForOvertime = new Date();\n\n      if (this.entry.fullDay) {\n        this.entry.overtime = new Duration(8, 0);\n      }\n\n      const entryOvertime = this.entry.overtime;\n      if (entryOvertime) {\n        proxyDateForOvertime.setHours(\n          entryOvertime.hours < 0\n            ? entryOvertime.hours * -1\n            : entryOvertime.hours\n        );\n        proxyDateForOvertime.setMinutes(entryOvertime.minutes);\n      } else {\n        proxyDateForOvertime.setHours(0);\n        proxyDateForOvertime.setMinutes(0);\n      }\n\n      return proxyDateForOvertime.toString();\n    },\n    changeOvertime(event: CustomEvent) {\n      const proxyDateForOvertime = new Date(event.detail.value);\n\n      this.entry.overtime = new Duration(\n        this.overtimeMode == OvertimeMode.REMOVE\n          ? proxyDateForOvertime.getHours() * -1\n          : proxyDateForOvertime.getHours(),\n        proxyDateForOvertime.getMinutes(),\n         this.overtimeMode == OvertimeMode.REMOVE\n      );\n    },\n    updateOvertimeForFullDay() {\n      if (this.entry.fullDay && this.entry.overtime) {\n        this.entry.overtime.hours =\n          this.overtimeMode === OvertimeMode.ADD ? 8 : -8;\n        this.entry.overtime.minutes = 0;\n      }\n    },\n  },\n  computed: {\n    title(): string {\n      return this.day\n        ? (this.day.entry && isSameDate(this.day.entry.start, this.entry.start)\n            ? this.$t(\"times.modal.edit\")\n            : this.$t(\"times.modal.add\")) +\n            \" \" +\n            this.entry.start.toLocaleDateString(navigator.language)\n        : \"\";\n    },\n  },\n});\n</script>","\nimport {\n  IonContent,\n  IonHeader,\n  IonTitle,\n  IonToolbar,\n  IonButton,\n  IonButtons,\n  IonItem,\n  IonList,\n  IonLabel,\n  IonDatetime,\n  IonSelect,\n  IonSelectOption,\n  IonToggle,\n  IonSegment,\n  IonSegmentButton,\n} from \"@ionic/vue\";\nimport { Day, Duration, Entry, EntryType, OvertimeMode } from \"../types\";\nimport { defineComponent, PropType } from \"vue\";\nimport TimeService from \"@/servies/times.service\";\n\nfunction isSameDate(first: Date, second: Date) {\n  return (\n    first.toLocaleTimeString(navigator.language, {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    }) ===\n    second.toLocaleTimeString(navigator.language, {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    })\n  );\n}\n\nexport default defineComponent({\n  name: \"TimeAddAndEditModal\",\n  entryEndChangedOrLoaded: false,\n  overtimeMode: OvertimeMode.ADD,\n  components: {\n    IonContent,\n    IonHeader,\n    IonTitle,\n    IonToolbar,\n    IonButton,\n    IonButtons,\n    IonItem,\n    IonList,\n    IonLabel,\n    IonDatetime,\n    IonSelect,\n    IonSelectOption,\n    IonToggle,\n    IonSegment,\n    IonSegmentButton,\n  },\n  props: {\n    day: { type: Object as PropType<Day>, default: undefined },\n    dismiss: { type: Function },\n    saveDayEntry: { type: Function },\n  },\n  data() {\n    return {\n      entry: (undefined as unknown) as Entry,\n      overtimeMode: OvertimeMode.ADD,\n      entryEndChangedOrLoaded: false,\n      EntryType,\n      OvertimeMode,\n    };\n  },\n  created() {\n    this.entry = this.getEntry();\n    this.overtimeMode =\n      this.entry.overtime && this.entry.overtime.hours > 0\n        ? OvertimeMode.ADD\n        : OvertimeMode.REMOVE;\n  },\n  methods: {\n    getStartDateTime(day: Day): Date {\n      if (day.entry) {\n        return day.entry.start;\n      }\n\n      const dayDate = new Date(day.date);\n      const current = new Date();\n\n      dayDate.setHours(current.getHours());\n      dayDate.setMinutes(current.getMinutes());\n      dayDate.setSeconds(current.getSeconds());\n      dayDate.setMilliseconds(current.getMilliseconds());\n\n      return dayDate;\n    },\n    getEndDateTime(day: Day, pausetime?: Duration | undefined): Date {\n      if (day.entry && day.entry.end) {\n        return day.entry.end;\n      }\n\n      return TimeService.calculatePerfectEnd(\n        this.getStartDateTime(day),\n        pausetime\n      );\n    },\n    getEntry(): Entry {\n      if (this.day.entry) {\n        //Deep clone to avoid changing dates when not saving\n        const entry: Entry = JSON.parse(JSON.stringify(this.day.entry));\n        entry.start = new Date(entry.start);\n        if (entry.end) {\n          this.entryEndChangedOrLoaded = true;\n          entry.end = new Date(entry.end);\n        } else {\n          entry.end = this.getEndDateTime(this.day, entry.pausetime);\n        }\n\n        if (entry.worktime) {\n          entry.worktime = new Duration(\n            entry.worktime.hours,\n            entry.worktime.minutes\n          );\n        }\n        if (entry.overtime) {\n          entry.overtime = new Duration(\n            entry.overtime.hours,\n            entry.overtime.minutes\n          );\n        }\n\n        return entry;\n      }\n      return {\n        start: this.getStartDateTime(this.day),\n        fullDay: false,\n        type: EntryType.WORK,\n        end: this.getEndDateTime(this.day),\n      };\n    },\n    save() {\n      const calculatedEntry = TimeService.calculateEntry(this.entry);\n\n      if (this.entry.type == EntryType.OVERTIME &&\n        (\n          (this.overtimeMode == OvertimeMode.REMOVE &&\n            calculatedEntry.overtime &&\n            calculatedEntry.overtime.hours > 0) ||\n          (this.overtimeMode == OvertimeMode.ADD &&\n            calculatedEntry.overtime &&\n            calculatedEntry.overtime.hours < 0)\n        )\n      ) {\n        //Change sign if it don't matches to the mode\n        calculatedEntry.overtime.hours = calculatedEntry.overtime.hours * -1;\n      }\n\n      //Set worktime to 0 for overtime and vacation\n      if (\n        this.entry.type == EntryType.OVERTIME ||\n        this.entry.type == EntryType.VACATION\n      ) {\n        calculatedEntry.worktime = new Duration(0, 0);\n      }\n\n      //Set overtime for vacation to 0\n      if (this.entry.type == EntryType.VACATION) {\n        calculatedEntry.overtime = new Duration(0, 0);\n      }\n\n      //If not type work set start and end time to 0:00\n      if(this.entry.type != EntryType.WORK)\n      {\n        calculatedEntry.start.setHours(0,0,0,0);\n\n        if(calculatedEntry.end)\n        {\n          calculatedEntry.end.setHours(0,0,0,0);\n        }\n      }\n\n      //Save to local storage\n      TimeService.saveEntryForDate(calculatedEntry.start, calculatedEntry);\n\n      //Update entry in list\n      if (this.saveDayEntry) {\n        this.saveDayEntry(calculatedEntry);\n      }\n      if (this.dismiss) {\n        this.dismiss();\n      }\n    },\n    changeEntryStart(event: CustomEvent) {\n      this.entry.start = new Date(event.detail.value);\n      if(!this.entryEndChangedOrLoaded)\n      {\n        this.entry.end = TimeService.calculatePerfectEnd(\n          this.entry.start,\n          this.entry.pausetime\n        );\n        this.entryEndChangedOrLoaded = false;\n      }\n    },\n    changeEntryEnd(event: CustomEvent) {\n      this.entryEndChangedOrLoaded = true;\n      this.entry.end = new Date(event.detail.value);\n    },\n    getOvertimeForPicker() {\n      const proxyDateForOvertime = new Date();\n\n      if (this.entry.fullDay) {\n        this.entry.overtime = new Duration(8, 0);\n      }\n\n      const entryOvertime = this.entry.overtime;\n      if (entryOvertime) {\n        proxyDateForOvertime.setHours(\n          entryOvertime.hours < 0\n            ? entryOvertime.hours * -1\n            : entryOvertime.hours\n        );\n        proxyDateForOvertime.setMinutes(entryOvertime.minutes);\n      } else {\n        proxyDateForOvertime.setHours(0);\n        proxyDateForOvertime.setMinutes(0);\n      }\n\n      return proxyDateForOvertime.toString();\n    },\n    changeOvertime(event: CustomEvent) {\n      const proxyDateForOvertime = new Date(event.detail.value);\n\n      this.entry.overtime = new Duration(\n        this.overtimeMode == OvertimeMode.REMOVE\n          ? proxyDateForOvertime.getHours() * -1\n          : proxyDateForOvertime.getHours(),\n        proxyDateForOvertime.getMinutes(),\n         this.overtimeMode == OvertimeMode.REMOVE\n      );\n    },\n    updateOvertimeForFullDay() {\n      if (this.entry.fullDay && this.entry.overtime) {\n        this.entry.overtime.hours =\n          this.overtimeMode === OvertimeMode.ADD ? 8 : -8;\n        this.entry.overtime.minutes = 0;\n      }\n    },\n  },\n  computed: {\n    title(): string {\n      return this.day\n        ? (this.day.entry && isSameDate(this.day.entry.start, this.entry.start)\n            ? this.$t(\"times.modal.edit\")\n            : this.$t(\"times.modal.add\")) +\n            \" \" +\n            this.entry.start.toLocaleDateString(navigator.language)\n        : \"\";\n    },\n  },\n});\n","import { render } from \"./TimeAddAndEditModal.vue?vue&type=template&id=0e03fd7e\"\nimport script from \"./TimeAddAndEditModal.vue?vue&type=script&lang=ts\"\nexport * from \"./TimeAddAndEditModal.vue?vue&type=script&lang=ts\"\nscript.render = render\n\nexport default script","\nimport {\n  IonButtons,\n  IonHeader,\n  IonMenuButton,\n  IonPage,\n  IonToolbar,\n  IonGrid,\n  IonRow,\n  IonCol,\n  IonContent,\n  IonList,\n  IonItem,\n  IonLabel,\n  IonItemGroup,\n  IonItemDivider,\n  IonText,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonItemOptions,\n  IonItemOption,\n  IonItemSliding,\n  IonFab,\n  IonFabButton,\n  IonIcon,\n  modalController,\n  actionSheetController,\n} from \"@ionic/vue\";\nimport { Month, Day, Entry, EntryType, Duration } from \"../types\";\nimport TimeService from \"@/servies/times.service\";\nimport { defineComponent } from \"vue\";\nimport TimeAddAndEditModalVue from \"./TimeAddAndEditModal.vue\";\nimport { add, addOutline, close } from \"ionicons/icons\";\n\nfunction daysInMonth(month: number, year: number): number {\n  return new Date(year, month+1, 0).getDate();\n}\n\nfunction createItemSelectorTextForDate(date: Date): string {\n  const day = date.toLocaleDateString(navigator.language, {\n    day: \"2-digit\"\n  }).toLowerCase();\n  const month = date.toLocaleDateString(navigator.language, {\n    month: \"long\"\n  }).toLowerCase();\n  const year = date.toLocaleDateString(navigator.language, {\n    year: \"numeric\"\n  }).toLowerCase();\n\n  return day+\"-\"+month+\"-\"+year;\n}\n\nfunction isSameDate(first: Date, second: Date) {\n  return (\n    first.toLocaleDateString(navigator.language, {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    }) ===\n    second.toLocaleDateString(navigator.language, {\n      day: \"2-digit\",\n      month: \"2-digit\",\n      year: \"numeric\",\n    })\n  );\n}\n\n\n\nexport default defineComponent({\n  interval: 1000,\n  months: [],\n  monthModifier: 0,\n  components: {\n    IonButtons,\n    IonHeader,\n    IonMenuButton,\n    IonPage,\n    IonToolbar,\n    IonGrid,\n    IonRow,\n    IonCol,\n    IonContent,\n    IonList,\n    IonItem,\n    IonLabel,\n    IonItemGroup,\n    IonItemDivider,\n    IonText,\n    IonInfiniteScroll,\n    IonInfiniteScrollContent,\n    IonItemOptions,\n    IonItemOption,\n    IonItemSliding,\n    IonFab,\n    IonFabButton,\n    IonIcon,\n  },\n  data() {\n    return {\n      months: [] as Month[],\n      current: {} as Entry,\n      completeOvertime: \"\",\n      interval: 1000,\n      monthModifier: 0,\n      add,\n      addOutline,\n    };\n  },\n  created() {\n    const newestDate: Date | null = TimeService.loadNewestDate();\n    if(newestDate != null && newestDate > new Date())\n    {\n      this.loadMonthsInFutureUntil(newestDate);\n      this.monthModifier = 1;\n    }\n    this.loadNextMonth();\n    this.loadNextMonth();\n    this.loadStatistics();\n    this.interval = setInterval(this.loadStatistics, 1000);\n  },\n  mounted() {\n    this.scrollToDate(new Date());\n  },\n  methods: {\n    formatDateForId(date: Date) {\n      const day = date.toLocaleDateString(navigator.language, {\n        day: \"2-digit\"\n      }).toLowerCase();\n      const month = date.toLocaleDateString(navigator.language, {\n        month: \"long\"\n      }).toLowerCase();\n      const year = date.toLocaleDateString(navigator.language, {\n        year: \"numeric\"\n      }).toLowerCase();\n\n      return \"times-item-\"+day+\"-\"+month+\"-\"+year;\n    },\n    scrollToDate(date: Date) {\n      const element = this.$el.querySelector('#'+this.formatDateForId(date));\n      if(element)\n      {\n        //element.scrollIntoView({alignToTop:true, behavior: 'smooth'});\n        window.scrollTo(0, element.offsetTop+20);\n      }\n    },\n    loadCompleteOvertime() {\n      this.completeOvertime = this.formatDuration(\n        TimeService.calculateOvertimeComplete()\n      );\n    },\n    isToday(day: Day): boolean {\n      return isSameDate(day.date, new Date());\n    },\n    getDayEntry(day: Day): Entry | undefined {\n      if (day.entry) {\n        if (isSameDate(day.entry.start, this.current.start)) {\n          return this.current;\n        }\n        return day.entry;\n      }\n      return;\n    },\n    loadStatistics() {\n      this.loadTodayEntry();\n      this.loadCompleteOvertime();\n    },\n    loadTodayEntry() {\n      let current: Entry | null = null;\n      if(TimeService.isWorkStartActive())\n      {\n        current = TimeService.loadActiveWorkEntry();\n      }\n\n      if(current === null)\n      {\n        current = TimeService.loadEntryForDate(new Date());\n      }\n\n      if (current === null) {\n        this.current = {\n          start: new Date(),\n          fullDay: false,\n          type: EntryType.WORK,\n          overtime: new Duration(0, 0),\n          worktime: new Duration(0, 0),\n        };\n      } else {\n        this.current = TimeService.calculateEntry(current);\n      }\n    },\n    switchLabelColor(day: Day) {\n      return day.entry\n        ? day.entry.type === EntryType.OVERTIME\n          ? \"warning\"\n          : day.entry.type === EntryType.VACATION\n          ? \"secondary\"\n          : day.entry.type === EntryType.ILL\n          ? \"tertiary\"\n          : \"primary\"\n        : \"medium\";\n    },\n    switchOvertimeColor(overtime: Duration | undefined) {\n      if (!overtime) {\n        return \"success\";\n      }\n      return overtime.toString().startsWith(\"-\") ? \"danger\" : \"success\";\n    },\n    formatTime(date: Date | undefined) {\n      return (date ? date : new Date()).toLocaleTimeString(navigator.language, {\n        hour: \"2-digit\",\n        minute: \"2-digit\",\n      });\n    },\n    formatDuration(duration: Duration | undefined): string {\n      if (duration) {\n        return duration.toString();\n      }\n      return \"0:00\";\n    },\n    isWork(entryType: EntryType) {\n      return entryType === EntryType.WORK;\n    },\n    loadData(event: CustomEvent) {\n      setTimeout(() => {\n        this.loadNextMonth();\n        if (event.target) {\n          const test: typeof IonInfiniteScroll = (event.target as unknown) as typeof IonInfiniteScroll;\n          test.complete();\n        }\n      }, 500);\n    },\n    getDayForDate(date: Date): Day {\n      const onlyWeekDayOptions: Intl.DateTimeFormatOptions = {\n        weekday: \"short\",\n      };\n      const onlyDayOptions: Intl.DateTimeFormatOptions = { day: \"numeric\" };\n      const newDay: Day = {\n        weekday: date.toLocaleDateString(\n          navigator.language,\n          onlyWeekDayOptions\n        ),\n        day: date.toLocaleDateString(navigator.language, onlyDayOptions),\n        date: date,\n      };\n      const dayEntry = TimeService.loadEntryForDate(date);\n\n      if (dayEntry != null) {\n        newDay.entry = dayEntry;\n      }\n      return newDay;\n    },\n    async loadMonth(month: number, year: number, date?: number) {\n      const baseDate = new Date();\n      baseDate.setDate(1);\n      baseDate.setMonth(month);\n\n      const onlyMonthNameOptions: Intl.DateTimeFormatOptions = {\n        month: \"long\",\n      };\n      const newMonth: Month = {\n        name: new Date(year, month).toLocaleDateString(\n          navigator.language,\n          onlyMonthNameOptions\n        ),\n        monthNumber: month,\n        year: baseDate.getFullYear(),\n        days: [],\n      };\n\n      let latestDay: number;\n      if(date)\n      {\n        latestDay = date;\n      } else if(this.months.length === 0) {\n        latestDay = new Date().getDate();\n      } else {\n        latestDay = daysInMonth(month, year)\n      }\n\n      for (let day = latestDay; day > 0; day--) {\n        const date = new Date(year, month, day);\n        const newDay: Day = this.getDayForDate(date);\n\n        newMonth.days.push(newDay);\n      }\n      \n      const foundMonthIndex = this.months.findIndex(searchMonth => searchMonth.year == year && searchMonth.monthNumber == month);\n\n      if(foundMonthIndex >= 0)\n      {\n        this.months[foundMonthIndex] = newMonth;\n      } else if(this.months[0] && (year > this.months[0].year || month > this.months[0].monthNumber))\n      {\n        this.months.unshift(newMonth);\n      } else {\n        this.months.push(newMonth);\n      }\n    },\n    async loadNextMonth() {\n      this.loadMonth((new Date().getMonth() - this.monthModifier), new Date().getFullYear());\n      this.monthModifier++;\n    },\n    async deleteEntryForDay(day: Day) {\n      if (day.entry) {\n        TimeService.deleteEntryForDate(day.entry.start);\n        day.entry = undefined;\n      }\n\n      (this.$refs.entryList as typeof IonList).$el.closeSlidingItems();\n    },\n    findDayForDate(date: Date): Day | undefined\n    {\n      const foundMonth = this.months.find(month => month.monthNumber === date.getMonth());\n      if(foundMonth)\n      {\n        return foundMonth.days.find(day => day.date.toDateString() == date.toDateString());       \n      }\n    },\n    updateTimeRange(start: Date, end: Date)\n    {\n      for (let date = new Date(start); date <= end; date.setDate(date.getDate() + 1)) {\n        const foundDay = this.findDayForDate(date);\n        const loadedEntry = TimeService.loadEntryForDate(date);\n        if(foundDay && loadedEntry != null)\n        {\n          foundDay.entry = loadedEntry;\n        }\n      }\n    },\n    async openAddEditModal(day: Day) {\n      const addEditModal = await modalController.create({\n        id: \"times-new-entry-\"+createItemSelectorTextForDate(day.date),\n        component: TimeAddAndEditModalVue,\n        componentProps: {\n          day: day,\n          dismiss: () => {\n            addEditModal.dismiss();\n          },\n          saveDayEntry: (entry: Entry) => {\n            let dayToSaveEntryTo: Day = day;\n            if(!isSameDate(entry.start, day.date))\n            {\n              const foundDay = this.findDayForDate(entry.start);\n              if(foundDay)\n              {\n                dayToSaveEntryTo = foundDay;\n              }\n            }\n\n            if(entry.start > new Date())\n            {\n              this.loadMonthsInFutureUntil(entry.start);\n            }\n\n            /*if (dayToSaveEntryTo.entry) {\n              dayToSaveEntryTo.entry.overtime = entry.overtime;\n            }*/\n            dayToSaveEntryTo.entry = entry;\n\n            if(entry.end && entry.start.toDateString() !== entry.end.toDateString())\n            {\n\n              this.updateTimeRange(entry.start, entry.end);\n            }\n\n            this.loadStatistics();\n          },\n        },\n      });\n      return addEditModal.present();\n    },\n    loadMonthsInFutureUntil(date: Date){\n      const newestMonth = new Date();\n      newestMonth.setHours(0, 0, 0, 0);\n      newestMonth.setDate(1);\n\n      for(const monthToLoad: Date = newestMonth; monthToLoad < date; monthToLoad.setMonth(monthToLoad.getMonth()+1))\n      {\n        if(monthToLoad.getFullYear() == date.getFullYear() && monthToLoad.getMonth() == date.getMonth())\n        {\n          this.loadMonth(monthToLoad.getMonth(), monthToLoad.getFullYear(), date.getDate());  \n        } else {\n          this.loadMonth(monthToLoad.getMonth(), monthToLoad.getFullYear());\n        }\n      }\n    },\n    getWorktimeForDate(date: Date) {\n      const dateEntry: Entry | undefined = this.getDayEntry(\n        this.getDayForDate(date)\n      );\n      if (dateEntry) {\n        return dateEntry.worktime;\n      }\n      return undefined;\n    },\n    getOvertimeForDate(date: Date) {\n      const dateEntry: Entry | undefined = this.getDayEntry(\n        this.getDayForDate(date)\n      );\n      if (dateEntry) {\n        return dateEntry.overtime;\n      }\n      return undefined;\n    },\n    async presentQuickActionsSheet() {\n      const today = new Date();\n      let todayDayElement: Day | undefined = this.months\n        .filter(\n          (month) =>\n            month.year == today.getFullYear() &&\n            month.monthNumber == today.getMonth()\n        )\n        .flatMap((month) => month.days)\n        .find((day) => isSameDate(day.date, today));\n\n      if (!todayDayElement) {\n        todayDayElement = this.getDayForDate(today);\n      }\n\n      const quickActionsSheet = await actionSheetController.create({\n        header: this.$t(\"times.quickActions.header\"),\n        buttons: [\n          {\n            text: TimeService.isWorkStartActive() ? this.$t(\"times.quickActions.stopWork\") : this.$t(\"times.quickActions.startWork\"),\n            icon: add,\n            handler: () => {\n              if(TimeService.isWorkStartActive())\n              {\n                TimeService.stopWork();\n              } else {\n                if (todayDayElement) {\n                  todayDayElement.entry = {\n                    start: new Date(),\n                    fullDay: false,\n                    type: EntryType.WORK,\n                  };\n\n                  TimeService.saveEntryForDate(new Date(), todayDayElement.entry);\n                  TimeService.saveWorkStart(todayDayElement.entry);\n                  this.loadStatistics();\n                }\n              }\n            },\n          },\n          {\n            text: this.$t(\"times.quickActions.newEntry\"),\n            icon: add,\n            handler: () => {\n              if (todayDayElement) {\n                this.openAddEditModal(todayDayElement);\n              }\n            },\n          },\n          {\n            text: this.$t(\"cancel\"),\n            icon: close,\n            role: \"cancel\",\n          },\n        ],\n      });\n      await quickActionsSheet.present();\n    },\n  },\n});\n","import { render } from \"./Times.vue?vue&type=template&id=52da0c2e&scoped=true\"\nimport script from \"./Times.vue?vue&type=script&lang=ts\"\nexport * from \"./Times.vue?vue&type=script&lang=ts\"\n\nimport \"./Times.vue?vue&type=style&index=0&id=52da0c2e&scoped=true&lang=css\"\nscript.render = render\nscript.__scopeId = \"data-v-52da0c2e\"\n\nexport default script","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\nvar isArray = require('../internals/is-array');\nvar toLength = require('../internals/to-length');\nvar bind = require('../internals/function-bind-context');\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind(mapper, thisArg, 3) : false;\n  var element;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        targetIndex = flattenIntoArray(target, original, element, toLength(element.length), targetIndex, depth - 1) - 1;\n      } else {\n        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nmodule.exports = flattenIntoArray;\n","'use strict';\nvar $ = require('../internals/export');\nvar $findIndex = require('../internals/array-iteration').findIndex;\nvar addToUnscopables = require('../internals/add-to-unscopables');\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.es/ecma262/#sec-array.prototype.findindex\n$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\n// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables\naddToUnscopables(FIND_INDEX);\n"],"sourceRoot":""}